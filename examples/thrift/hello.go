// This file is automatically generated. Do not modify.

package hello

import (
	"fmt"
)

var _ = fmt.Sprintf

type HelloReply struct {
	Message *string `thrift:"1" json:"message,omitempty"`
	Integer *int32  `thrift:"2" json:"integer,omitempty"`
	Bloop   *bool   `thrift:"3" json:"bloop,omitempty"`
}

type HelloRequest struct {
	Arg  *HelloRequestArg `thrift:"1" json:"arg,omitempty"`
	Ints []int32          `thrift:"2" json:"ints,omitempty"`
	Amap map[int32]int32  `thrift:"3" json:"amap,omitempty"`
}

type HelloRequestArg struct {
	Name *string     `thrift:"1" json:"name,omitempty"`
	Age  *int32      `thrift:"2" json:"age,omitempty"`
	Blip *HelloReply `thrift:"3" json:"blip,omitempty"`
}

type Greeter interface {
	SayHello(in *HelloRequest) (*HelloReply, error)
}

type GreeterServer struct {
	Implementation Greeter
}

func (s *GreeterServer) SayHello(req *GreeterSayHelloRequest, res *GreeterSayHelloResponse) error {
	val, err := s.Implementation.SayHello(req.In)
	res.Value = val
	return err
}

type GreeterSayHelloRequest struct {
	In *HelloRequest `thrift:"1,required" json:"in"`
}

type GreeterSayHelloResponse struct {
	Value *HelloReply `thrift:"0" json:"value,omitempty"`
}

type GreeterClient struct {
	Client RPCClient
}

func (s *GreeterClient) SayHello(in *HelloRequest) (ret *HelloReply, err error) {
	req := &GreeterSayHelloRequest{
		In: in,
	}
	res := &GreeterSayHelloResponse{}
	err = s.Client.Call("SayHello", req, res)
	if err == nil {
		ret = res.Value
	}
	return
}
